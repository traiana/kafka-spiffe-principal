# Github Actions Workflow. Generated by gradlewise plugin (ver. 1.3.2)
# All manual changes to this file will be LOST on the next build.

name: "GradleWise"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
env:
  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
  ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
  GA_GIT_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

jobs:
  build-and-test:
    name: "Build And Test"
    runs-on:
      - self-hosted
      - production
      - medium
    container: docker.tw.ee/actions_java15

    steps:
      - name: "Checkout git repo"
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 # 1st commit is merge commit, we need one more to understand if snapshot is requested.
      # Work around git repo permissions issues
      # See: https://github.com/transferwise/gradlewise/issues/60
      - name: "Add repo as safe directory"
        run: |
          git config --global --add safe.directory "$(pwd)"
      - name: "Determine Branch"
        id: branch
        uses: transferwise/sanitize-branch-name@v1
      - name: "Cache gradle settings"
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle
          key: gradle-v1-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties', '*.gradle*') }}
      - name: "Assemble binaries"
        run: GRADLE_USER_HOME=$HOME/.gradle ./gradlew --console=plain --stacktrace --refresh-dependencies assemble testClasses
        env:
          GA_GIT_BRANCH: ${{ steps.branch.outputs.sanitized-branch-name }}
          PUBLISH_REQUESTED: ${{ steps.trigger-docker.outputs.docker-upload }}
      - name: "Run tests"
        run: GRADLE_USER_HOME=$HOME/.gradle ./gradlew --console=plain --stacktrace --info check
        env:
          GA_GIT_BRANCH: ${{ steps.branch.outputs.sanitized-branch-name }}
          PUBLISH_REQUESTED: ${{ steps.trigger-docker.outputs.docker-upload }}
      - name: "Publish"
        run: GRADLE_USER_HOME=$HOME/.gradle ./gradlew --console=plain --stacktrace --info publish
        env:
          GA_GIT_BRANCH: ${{ steps.branch.outputs.sanitized-branch-name }}
          PUBLISH_REQUESTED: ${{ steps.trigger-docker.outputs.docker-upload }}
      - name: "Publish Test Report"
        uses: mikepenz/action-junit-report@v3.7.2
        if: always()
        with:
          check_name: ":test (junitXml)"
          report_paths: 'build/test-results/test/**/*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: "Collect reports"
        run: |
          tar -zcvf _test.tar.gz build/reports/tests/test build/test-results/test || echo 'No such file'
          tar -zcvf all-test-reports.tar.gz _test.tar.gz
        if: always()
      - name: "Store test results"
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: all-test-reports
          path: all-test-reports.tar.gz
          retention-days: 7

# Workflow was generated using following configs:

# config.bootPlatformArtifactMatrix: []
# config.buildAndTestJobConfigInternal.container: docker.tw.ee/actions_java15
# config.buildAndTestJobConfigInternal.containerSize: not defined
# config.buildAndTestJobConfigInternal.env: {}
# config.cronSchedule: false
# config.dockerServices: []
# config.env: {}
# config.gradleBuildCommand: --refresh-dependencies assemble testClasses
# config.gradleProjectDirectories: []
# config.gradlePublishCommand: not defined
# config.gradleTestCommand: not defined
# config.junitXmlReportPaths[0]: {:test (junitXml): build/test-results/test/**/*.xml}
# config.libraryProjects: []
# config.produceSingleJunitReport: false
# config.projectName: kafka-spiffe-principal
# config.publishesTag: false
# config.reportsPaths[_test]: build/reports/tests/test build/test-results/test
# config.sonarqubeAnalysePr: not defined
# config.sonarqubeEnabled: false
# config.usesWiseJavaLibraryPlugin: false
